/*
	c++中，参数传递的方式有两种：值传递与地址传递。
		1.值传递 --- 函数的形参接收的是值。
			特点：①.在值传递中，实参的值被“复制”到函数的形参中；
				  ②.在值传递中，对形参的修改不会影响到原始值；
				  ③.值传递适用于需要保护原始值不被修改的情况。
		2.地址传递 --- 函数的形参接收的是地址，通过指针或引用来实现。
			特点：①.在地址传递中，实参的地址被传递到函数的形参中；
				  ②.在地址传递中，通过形参可以修改这块地址内保存的值，因此原始值就发生了改变；
				  ③.地址传递适用于需要修改原始值的情况。

	案例：还是以两整数交换为例，此处采用地址传递的方式，项目十五中采用的是值传递的方式。
*/
#include <iostream>
using namespace std;

void swap02(int* num1, int* num2)
{
	int temp = *num1;
	*num1 = *num2;
	*num2 = temp;
	cout << "指针num1指向的值 = " << *num1 << endl;
	cout << "指针num2指向的值 = " << *num2 << endl;

}
int main()
{
	int a = 10;
	int b = 20;
	swap02(&a, &b); // 注意要传入实参的地址
	cout << "实参a = " << a << endl;
	cout << "实参b = " << b << endl;
	
	system("pause");
	return 0;
}